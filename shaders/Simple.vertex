#version 330 core
// layout (location = 0) in vec3 aPos;
// layout (location = 1) in vec2 aTexCoord;
// layout (location = 2) in vec3 aColor;

// out vec3 ourColor;
// out vec2 TexCoord;

// uniform mat4 u_Camera;

// void main()
// {
//     vec4 position = vec4(aPos, 1.0);
//     gl_Position = position * u_Camera;
//     ourColor = aColor;
//     TexCoord = aTexCoord;
// }
     
layout (location = 0) in vec4 position;
layout (location = 1) in vec2 textureCoordinate;

// Output vertex shader data (texture coordinate) to fragment shader
out vec2 TexCoord;
out vec4 FragPos;

uniform mat4 u_Camera;
        
void main()
{
    FragPos = u_Camera * position;
    gl_Position = position * u_Camera;
    TexCoord = textureCoordinate;
};